name: Deploy Property Service

on:
  push:
    tags:
      - 'v*-property'

jobs:
  docker:
    runs-on: ubuntu-latest

    # Run only if this push is BOTH on production branch AND a tag matching v*-api
    if: github.ref_name == 'production' || startsWith(github.ref, 'refs/tags/v') && contains(github.ref, '-property')

    steps:
      # 1. Checkout repo
      - uses: actions/checkout@v3

      # 2. Set Docker image version from tag
      - name: Set Docker image version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}  # e.g., v1.2.3-property
          VERSION=${VERSION#v}              # strip leading 'v' â†’ 1.2.3
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Log version
        run: echo "Docker image version is $VERSION"

      # 3. Docker login
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      # 4. Create env file for property-service
      - name: Create env file
        run: |
          mkdir -p env
          echo "SPRING_APPLICATION_NAME=property-service" >> env/property-service.env
          echo "SERVER_PORT=${{ secrets.PROPERTY_PORT }}" >> env/property-service.env
          echo "SPRING_DATASOURCE_URL=${{ secrets.PROPERTY_DB_URL }}" >> env/property-service.env
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.PROPERTY_DB_USERNAME }}" >> env/property-service.env
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.PROPERTY_DB_PASSWORD }}" >> env/property-service.env
          echo "SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver" >> env/property-service.env
          echo "SPRING_FLYWAY_ENABLED=true" >> env/property-service.env
          echo "SPRING_FLYWAY_BASELINE_ON_MIGRATE=true" >> env/property-service.env

      # 5. Builds Docker image from the property-service directory
      - name: Build Docker image
        run: docker build -t mykks32/realstate-property-service:$VERSION ./property-service

      # 6. Pushes the versioned Docker image to Docker Hub
      - name: Push Docker image
        run: docker push mykks32/realstate-property-service:$VERSION

      # 7. Tags the same image as 'latest' and pushes it
      - name: Tag as latest and push
        run: |
          docker tag mykks32/realstate-property-service:$VERSION mykks32/realstate-property-service:latest
          docker push mykks32/realstate-property-service:latest

      # 8. Calls Render's webhook to deploy the new image
      - name: Trigger Render Deploy
        if: success()
        run: |
          curl -X POST "${{ secrets.RENDER_PROPERTY_DEPLOY_HOOK }}"